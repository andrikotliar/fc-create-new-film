"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var jsonID=document.querySelector("#id"),inputs=document.querySelectorAll("input"),title=document.querySelector(".film-title"),type=document.querySelector(".type"),create=document.querySelector("#create"),clear=document.querySelector("#clear"),save=document.querySelector("#save"),copy=document.querySelector("#copy"),resultWindow=document.querySelector(".modal__json"),modal=document.querySelector(".modal"),modalOverlay=document.querySelector(".modal__overlay"),addActor=document.querySelector("#addActor"),addAward=document.querySelector("#addAward"),actors=document.querySelector("#actors"),awards=document.querySelector("#awards"),seasonsData=document.querySelector(".seasons__data"),seasonsCount=document.querySelector("#seasonsCount"),addSeasonsBtn=document.querySelector("#addSeasons");jsonID.value=localStorage.getItem("JSONID");var Film=function e(t,o,n,r,a,c,l,s,i,u,d,m,v,y,p,h,f,S,g,q,w,L){_classCallCheck(this,e),this.id=+t,this.title=o,this.poster=n,this.trailer=r,this.genres=a,this.production=c,this.director=l,this.producers=s,this.writtens=i,this.music=u,this.cinema=d,this.year=+m,this.time=+v,this.country=y,this.budget=p,this.boxoffice=h,this.actors=f,this.synopsis=S,this.categories=g,this.awards=q,this.parts=w,this.type=L};function clearTitle(e,t){t.textContent==e&&(t.textContent="")}function newFilm(){var e=document.querySelector("#id").value,t=document.querySelector("#title").textContent,o=document.querySelector("#poster").value.trim(),n=document.querySelector("#trailer").value.trim(),r=genreBuilder(document.querySelectorAll('.categories--genres input[type="checkbox"]')),a=productionBuilder(),c=document.querySelector("#director").value.trim(),l=document.querySelector("#producers").value.trim(),s=document.querySelector("#writtens").value.trim(),i=document.querySelector("#music").value.trim(),u=document.querySelector("#cinema").value.trim(),d=document.querySelector("#year").value,m=document.querySelector("#time").value,v=document.querySelector("#country").value.trim(),y=document.querySelector("#budget").value,p=document.querySelector("#boxoffice").value,h=actorBuilder(),f=document.querySelector("#synopsis").value.trim(),S=categoriesBuilder(document.querySelectorAll(".personal-category")),g=document.querySelector("#parts").value,q=awardBuilder(),w={value:"film",data:null};return"Series"==type.value&&(n=null,w={value:"series",data:generateSeasonsData()},y=null,p=null),""==g&&(g=null),new Film(e,t,o,n,r,a,c,l,s,i,u,d,m,v,y,p,h,f,S,q,g,w)}function categoriesBuilder(e){for(var t=[],o=0;o<e.length;o++)1==e[o].checked&&t.push(e[o].value);return t.length?t:["uncategorised"]}function genreBuilder(e){for(var t=[],o=0;o<e.length;o++)1==e[o].checked&&t.push(e[o].value);return t}function productionBuilder(){var e=[];return document.querySelector("#production").value.trim().split(", ").forEach((function(t){return e.push(t.replace(/\s/g,"-"))})),e}function actorBuilder(){for(var e=function e(t,o,n){_classCallCheck(this,e),this.photo=t,this.name=o,this.role=n},t=[],o=document.querySelectorAll(".actor-photo"),n=document.querySelectorAll(".actor-name"),r=document.querySelectorAll(".actor-role"),a=0;a<n.length;a++)t.push(new e(o[a].value.trim(),n[a].value.trim(),r[a].value.trim()));return t}function awardBuilder(){for(var e=function e(t,o){_classCallCheck(this,e),this.title=t,this.nominations=o},t=[],o=document.querySelectorAll(".award-title"),n=document.querySelectorAll(".award-nominations"),r=0;r<o.length;r++)""!=o[r].value?t.push(new e(o[r].value.trim(),n[r].value.trim().split(", "))):t=null;return t}function addLine(e,t,o,n){var r='\n        <div class="inputs-line">\n            '.concat(addLineInput(t,o,n),"\n        </div>\n    ");e.insertAdjacentHTML("beforeend",r)}function addLineInput(e,t,o){for(var n="",r=0;r<e;r++)n+='\n            <div class="input-wrapper">\n                <input type="text" class="'.concat(t[r],'" placeholder="').concat(o[r],'">\n            </div>\n        ');return n}function seasonsComponent(){seasonsData.insertAdjacentHTML("beforeend",'\n        <div class="seasons__data-row">\n            <div class="input-wrapper">\n                <label for="seasonEpisodes">Episodes</label>\n                <input type="number" class="season-episodes">\n            </div>\n            <div class="input-wrapper">\n                <label for="seasonTrailer">Trailer</label>\n                <input type="text" class="season-trailer">  \n            </div>\n        </div>\n    ')}function addSeasons(){seasonsData.textContent="";for(var e=0;e<parseInt(seasonsCount.value);e++)seasonsComponent()}function generateSeasonsData(){for(var e=document.querySelectorAll(".season-episodes"),t=document.querySelectorAll(".season-trailer"),o=[],n=function e(t,o){_classCallCheck(this,e),this.episodes=t,this.trailer=o},r=0;r<e.length;r++)o.push(new n(e[r].value,t[r].value));return o}function showNewData(){var e=newFilm();resultWindow.innerHTML=JSON.stringify(e,void 0,4).replace(/"(\\.|[^"\\])*":/g,'<span class="property">$&</span>').replace(/[{},\[\]]/g,'<span class="symbol">$&</span>'),localStorage.setItem("JSONID",id.value),showModal(modal)}function hideType(){var e=document.querySelectorAll('[data-type="film"]'),t=document.querySelectorAll('[data-type="series"]'),o=document.querySelector("#seriesCategory");"Series"==type.value?(e.forEach((function(e){return e.classList.add("hidden")})),t.forEach((function(e){return e.classList.remove("hidden")})),o.checked=!0):(t.forEach((function(e){return e.classList.add("hidden")})),e.forEach((function(e){return e.classList.remove("hidden")})),o.checked=!1)}function setType(){localStorage.getItem("dataType")||localStorage.setItem("dataType","Film"),type.value=localStorage.getItem("dataType")}function saveTypeToLocalStorage(){localStorage.setItem("dataType",type.value)}function showModal(e){document.body.style.overflow="hidden",e.classList.add("modal--visible")}function closeModal(e){"modal__overlay"==e.target.className&&(e.target.closest(".modal").classList.remove("modal--visible"),document.body.style.overflow="")}function closeModalWithoutClick(){modal.classList.contains("modal--visible")&&(modal.classList.remove("modal--visible"),document.body.style.overflow="")}function clearFields(){var e=document.querySelectorAll(".inputs-line"),t=document.querySelectorAll("textarea");title.textContent="New film",inputs.forEach((function(e){e.checked=!1,"id"!=e.id&&"checkbox"!=e.type&&(e.value="","budget"!=e.id&&"boxoffice"!=e.id&&"country"!=e.id||(e.value=e.defaultValue))})),e.forEach((function(e){e.classList.contains("inputs-line--static")||e.remove()})),t.forEach((function(e){return e.value=""}))}function saveData(){var e=newFilm(),t=(jsonID.value.padStart(4,0)+"_"+title.textContent).replace(/[\,\.\:-\s]/g,"_").replace(/\_+/g,"_"),o=new Blob([JSON.stringify(e,void 0,4)],{type:"application/json; charset=utf-8"});saveAs(o,"".concat(t,".json"))}function copyData(){navigator.clipboard.writeText(resultWindow.textContent).then((function(){copy.classList.add("copy-btn--copied"),setTimeout((function(){copy.classList.remove("copy-btn--copied")}),500)}))}function idError(){jsonID.focus(),jsonID.classList.add("error")}function checkID(e){jsonID.value!=localStorage.getItem("JSONID")?e():(closeModalWithoutClick(),idError())}addSeasonsBtn.addEventListener("click",addSeasons),setType(),hideType(),type.addEventListener("change",(function(){hideType(),saveTypeToLocalStorage()})),title.addEventListener("click",(function(){clearTitle("New film",title)})),create.addEventListener("click",showNewData),clear.addEventListener("click",clearFields),save.addEventListener("click",(function(){return checkID(saveData)})),copy.addEventListener("click",(function(){return checkID(copyData)})),addActor.addEventListener("click",(function(){addLine(actors,3,["actor-photo","actor-name","actor-role"],["Photo","Actor","Role"])})),addAward.addEventListener("click",(function(){addLine(awards,2,["award-title","award-nominations"],["Awards","Nominations"])})),modalOverlay.addEventListener("click",closeModal),jsonID.addEventListener("change",(function(){jsonID.classList.contains("error")&&jsonID.classList.remove("error")})),"serviceWorker"in navigator&&navigator.serviceWorker.register("https://andrikotliar.github.io/fc-create-new-film/sw.js").then((function(){return navigator.serviceWorker.ready.then((function(e){e.sync.register("syncdata")}))})).catch((function(e){return console.log(e)}));